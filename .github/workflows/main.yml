name: Mon Premier wf
env: 
 JOUR_DE_LA_SEMAINE: Lundi # Définition d'une variable d'environnement globale
on: [push]
jobs:
 say-greats:
  runs-on: ubuntu-latest
  steps:
  - name: Affiche le résultat hello world
    run: echo "Hello World !"
  - name: Print content pwd
    run: env
  - name: Etape 1
    run: echo "Ceci est l'étape 1"
    id: etape1
  - name: Affiche le résultat de l'étape 1
    run: echo " L'étape 1 a éxécuté le run ${{steps.etape1.conclusion }}"
  - name: Affiche le statut du job 
    run: echo "Nom du `job` ${{job.status}}"
  - name: Affiche l'OS du runner
    run: echo "Le runner utilise l'OS ${{ runner.os }}"
  - name: Utilise un secret
    run: echo "Le secret est ${{ secrets.MY_SECRET }}"
 test:
  # Système d'exploitation sur lequel le job s'exécute
  runs-on : ubuntu-latest
  # Stratégie de matrice
  strategy:
   # Utilisation d'une matrice pour exécuter des combinaisons de tests
   matrix:
    groupe_de_test: [1,2]
    node: [14,16]
  # Étapes du job
  steps:
    # Exécution des tests et sauvegarde des résultats dans un fichier texte
    # Le nom du fichier texte inclut l'indice du job dans la matrice
   - run: echo "Mock test logs" > test-job-${{ strategy.job-index }}.txt
   # Téléversement des logs
   - name: Téléversement des logs
     uses: actions/upload-artifact@v4
     with:
          # Nom unique pour l'artefact, incluant l'indice du job
        name: Build log for job ${{ strategy.job-index }}

          # Chemin du fichier à téléverser
        path: test-job-${{ strategy.job-index }}.txt
 
 job_de_salutation :  # Nom du job
    runs-on: ubuntu-latest  # Utilisation de la dernière version d'Ubuntu comme environnement de runner
    env :
      Salutation: Bonjour  # Définition d'une variable d'environnement au niveau du job
    steps :
      - name : "Dire bonjour à Pierre parce que c'est lundi"  # Nom de l'étape
        if : ${{ env.JOUR_DE_LA_SEMAINE == 'Lundi' }}  # Condition pour exécuter cette étape
        run : echo "$Salutation $Prenom. Aujourd'hui, c'est $JOUR_DE_LA_SEMAINE !"  # Commande à exécuter
        env :
          Prenom: Pierre  # Définition d'une variable d'environnement au niveau de l'étape


 print:
    runs-on: ubuntu-latest
    steps:
    - name: Affiche des infos github
      run: echo "Ce `workflow` a été déclenché par ${{ github.event_name }} sur la branche ${{ github.ref }}"

 build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node: [14, 16]
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Output node version
        run: node --version
 #This example workflow has three jobs: a build job that does a build, a deploy job that requires the build job, and a debug job that requires both the build and deploy jobs and runs only if there is a failure in the workflow. 
 #The deploy job also uses the needs context to access an output from the build job.       
 buildTodeploy:
    runs-on: ubuntu-latest
    outputs:
      build_id: ${{ steps.build_step.outputs.build_id }}
    steps:
      - name: Build
        id: build_step
        run: echo "build_id=$RANDOM" >> $GITHUB_OUTPUT
 deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - run: echo "Deploying build ${{ needs.build.outputs.build_id }}"
 debug:
    needs: [build, deploy]
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    steps:
      - run: echo "Failed to build and deploy"

